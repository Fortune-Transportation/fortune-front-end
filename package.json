{
  "name": "fortune-front-end",
  "version": "0.0.0",
  "description": "Fortune Front-end",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/Fortune-Transportation/fortune-front-end.git"
  },
  "keywords": [
    "Fortune",
    "Transportation",
    "front-end"
  ],
  "author": "Fortune Transportation",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/Fortune-Transportation/fortune-front-end/issues"
  },
  "homepage": "https://github.com/Fortune-Transportation/fortune-front-end#readme",
  "devDependencies": {
    "autoprefixer": "^6.2.1",
    "bower-installer": "^1.2.0",
    "checksum": "^0.1.1",
    "concat-cli": "^1.0.1",
    "cpy": "^3.4.1",
    "eslint": "^1.7.1",
    "front-end-dependency-inject": "^1.0.5",
    "fs-promise": "^0.3.1",
    "globby": "^3.0.1",
    "jade": "^1.11.0",
    "jasmine-core": "^2.3.4",
    "karma": "^0.13.9",
    "karma-chrome-launcher": "^0.2.0",
    "karma-firefox-launcher": "^0.1.6",
    "karma-jasmine": "^0.3.6",
    "ncp": "^2.0.0",
    "ng-templatecache-convert": "^1.0.0",
    "node-sass": "^3.4.2",
    "postcss-cli": "^2.3.2",
    "protractor": "^3.0.0",
    "q": "^1.4.1",
    "rimraf": "^2.4.4",
    "sass-lint": "^1.4.0",
    "uglify-js": "^2.5.0",
    "uglifycss": "0.0.19"
  },
  "config": {},
  "scripts": {
    "clean_tmp": "node node_modules/rimraf/bin.js tmp",
    "clean_prod": "node node_modules/rimraf/bin.js dist",
    "clean_dev": "node node_modules/rimraf/bin.js dev",
    "clean": "npm run clean_tmp & npm run clean_prod & npm run clean_dev",
    "bower": "node node_modules/bower-installer/bower-installer.js -r",
    "update_webdriver": "node node_modules/protractor/bin/webdriver-manager update",
    "unit_tests": "node node_modules/karma/bin/karma start",
    "e2e_tests": "node node_modules/protractor/bin/protractor",
    "test": "npm run unit_tests && npm run e2e_tests",
    "compile_jade": "node node_modules/jade/bin/jade app index.jade --out tmp/html",
    "ng_templates": "node node_modules/ng-templatecache-convert/index.js fortuneFrontEnd tmp/ngTemplates.js tmp/html/*.html !tmp/html/index.html",
    "lint_js": "node node_modules/eslint/bin/eslint.js app/*.js !app/lib/**/*",
    "uglify_js": "node scripts/uglify-js.js tmp/app.min.js app/**/*.js !app/lib/**/* !app/**/*.spec.js tmp/ngTemplates.js & node scripts/uglify-js.js tmp/lib.min.js app/lib/**/*.js",
    "checksum_js": "node scripts/checksum.js tmp/app.min.js & node scripts/checksum.js tmp/lib.min.js",
    "inject_js": "node node_modules/front-end-dependency-inject/index.js lib js tmp/html/index.html tmp/html/index.html tmp lib.*.min.js && node node_modules/front-end-dependency-inject/index.js app js tmp/html/index.html tmp/html/index.html tmp app.*.min.js",
    "lint_sass": "node node_modules/sass-lint/bin/sass-lint.js app/*.scss !app/lib/**/*",
    "compile_sass": "node node_modules/node-sass/bin/node-sass app/ -o tmp/css",
    "autoprefix": "node node_modules/postcss-cli/index.js --use autoprefixer tmp/css/*.css -d tmp/css",
    "uglify_css": "node scripts/uglify-css.js tmp/app.min.css tmp/css/*.css & node scripts/uglify-css.js tmp/lib.min.css app/lib/**/*.css",
    "checksum_css": "node scripts/checksum.js tmp/app.min.css & node scripts/checksum.js tmp/lib.min.css",
    "inject_css": "node node_modules/front-end-dependency-inject/index.js lib css tmp/html/index.html tmp/html/index.html tmp lib.*.min.css && node node_modules/front-end-dependency-inject/index.js app css tmp/html/index.html tmp/html/index.html tmp app.*.min.css",
    "prep_html_prod": "npm run compile_jade && npm run ng_templates",
    "prep_js_prod": "npm run lint_js && npm run test && npm run uglify_js && npm run checksum_js && npm run inject_js",
    "prep_css_prod": "npm run compile_sass && npm run autoprefix && npm run uglify_css && npm run checksum_css && npm run inject_css",
    "copy_assets": "node node_modules/cpy/cli.js app/assets/images/* dist/assets/images",
    "copy_prod": "node node_modules/cpy/cli.js tmp/html/index.html tmp/*.min.js tmp/*.min.css dist & npm run copy_assets",
    "prod": "npm run clean & npm run bower && npm run prep_html_prod && npm run prep_js_prod && npm run prep_css_prod && npm run copy_prod && npm run clean_tmp"
  }
}
